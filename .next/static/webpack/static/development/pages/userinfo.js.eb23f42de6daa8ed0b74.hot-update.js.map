{"version":3,"file":"static/webpack/static/development/pages/userinfo.js.eb23f42de6daa8ed0b74.hot-update.js","sources":["webpack:///./pages/userinfo.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n    Icon,\n    Button,\n    Input,\n    Form,\n} from 'antd';\nimport styles from './userinfo.less';\nimport logo from '/static/logo.svg';\nimport Connection from '@/store';\nimport Router from 'next/router';\nimport moment from 'moment';\nimport axios from 'axios';\n\ninterface IProps {\n    \"username\"?: string,\n    \"Identity\"?: string,\n    \"Bio\"?: string,\n    \"Position\"?: string,\n    \"Website\"?: string,\n    \"Institution\"?: string,\n    \"messageList\"?: any\n}\ninterface IState {\n    \"username\"?: string,\n    \"Identity\"?: string,\n    \"Bio\"?: string,\n    \"Position\"?: string,\n    \"Website\"?: string,\n    \"Institution\"?: string,\n    isEdit?: boolean,\n    \"messageList?\": any\n}\n\n\n// @ts-ignore\n@Connection(({albums, loading}) => ({\n    albums: albums,\n    loading: loading.effects['_user/login'],\n}))\nexport default class UserInfo extends React.Component<IProps, IState> {\n\n    // 异步获取 JS 普通对象，并绑定在props上当服务渲染时, 我是最先执行的声明周期函数  first\n    static async getInitialProps(props) {\n\n        // let serverData = await new Promise(function(resolve, reject){\n        //     setTimeout(function(){\n        //         var tempServerData = {\n        //             username: 'Yijun Liu',\n        //             Identity: 'USA. University of San Francisco',\n        //             Bio: 'Computer Scientis',\n        //             email: 'zhangsan@163.com',\n        //             \"messageList\": [\n        //                 {\n        //                     id: 1,\n        //                     email: 'Yijun Liu@163.com',\n        //                     message: 'Just setting up my Twitter.111111',\n        //                     date: '2019-5-18 11:33:56'\n        //                 },\n        //                 {\n        //                     id: 2,\n        //                     email: 'Yijun Liu@163.com',\n        //                     message: 'Just setting up my Twitter.222222',\n        //                     date: '2019-5-18 11:33:56'\n        //                 },\n        //                 {\n        //                     id: 3,\n        //                     email: 'Yijun Liu@163.com',\n        //                     message: 'Just setting up my Twitter.333333',\n        //                     date: '2019-5-18 11:33:56'\n        //                 }\n        //             ]\n        //         };\n        //         resolve(tempServerData);\n        //     }, 4000)\n        // })\n        // var res = await axios.get('http://localhost:50000/getUserinfo')\n        // console.log(res)\n        // console.log(res.data)\n        // var serverData = res.data;\n\n        // let serverData = await new Promise(function(resolve, reject){\n        //     setTimeout(function(){\n        //         var tempServerData =  {\n        //             username: 'Yijun Liu',\n        //             Identity: 'I am a/an Engineer',\n        //             Bio: 'This is Bio',\n        //             Position: 'I am a/an Student',\n        //             Institution: 'University of California, Irvine',\n        //             Website: 'www.Ureka.com',\n        //             // \"messageList\": [\n        //             //     {\n        //             //         id: 1,\n        //             //         title: 'title',\n        //             //         message: 'Just setting up my Twitter.111111',\n        //             //         date: '2019-5-18 11:33:56'\n        //             //     }\n        //             // ]\n        //         };\n        //         resolve(tempServerData);\n        //     }, 2000)\n        // })\n        // return serverData;\n    }\n\n    // 构造函数， 我是 second\n    constructor(props) {\n        super(props);\n        const {username} = this.props;\n        // 定义state数据\n        this.state = {\n            isEdit: false\n        }\n        console.log('huangbiao', username)\n    }\n\n    // 页面加载完了，设置body的背景色    我是 Third\n    componentDidMount () {\n        document.getElementsByTagName('body')[0].style.background = '#E7ECEF';\n        let {username, Identity, Bio, Position, Institution, Website, messageList} = this.props;\n        console.log('huangbiao', username)\n        var userinfoStr = window.localStorage.getItem(\"userinfo\");\n        var userInfo = JSON.parse(userinfoStr);\n\n        this.setState({\n            \"username\": userInfo.fullName,\n            \"Identity\": userInfo.occupation,\n            \"Bio\": userInfo.bio,\n            \"Position\": userInfo.profession,\n            \"Institution\": userInfo.institution,\n            \"Website\":userInfo.parameter,\n        });\n        this.getMesageList();\n    }\n\n    getMesageList () {\n        const that = this;\n        var userInfoStr = window.localStorage.getItem(\"userinfo\");\n        var userInfo = JSON.parse(userInfoStr);\n        var tokenStr = userInfo.token;\n        var userId = userInfo.userId;\n\n        var opts = {\n            method:\"GET\"\n        }\n        fetch(\"http://ec2-52-15-224-200.us-east-2.compute.amazonaws.com:8080/api/post?offset=0&limit=10&userIds=\"+userId+\"&statuses=Draft&subscribedOnly=false\", {\n            method:\"GET\",\n            headers: {\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \"+tokenStr\n            }\n        })\n            .then((response) => {\n                return response.json();  //返回一个带有文本的对象\n            })\n            .then((res) => {\n                var messageArr = res;\n                var result = [];\n                for (var i = 0; i < messageArr.length; i++) {\n                    var currentObj = messageArr[i];\n                    var showObj = {\n                        id: currentObj.post.id,\n                        title: currentObj.post.title,\n                        message: currentObj.post.text,\n                        date: moment(new Date(currentObj.post.lastModififedDate)).format('YYYY-MM-DD HH:mm:ss')\n                    }\n                    result.push(showObj);\n                }\n                that.setState({\n                    \"messageList\": result\n                })\n            })\n            .catch((error) => {\n                alert(error)\n            })\n\n    }\n\n\n    // 离开页面处理的逻辑  我是 Last\n    componentWillUnmount () {\n    }\n\n    // 点击编辑按钮，将 isEdit 改为true，即 编辑状态\n    editAction () {\n        this.setState({\n            isEdit: true\n        })\n    }\n\n    // 点击取消按钮，将 isEdit 改为false，即 非编辑状态\n    cancelInputAction () {\n        this.setState({\n            isEdit: false\n        })\n    }\n    // saveUserInfoAction () {\n    //     this.setState({\n    //         isEdit: false\n    //     })\n    // }\n\n    // 输入表单，触发的onchange事件，改变input的值\n    userInputChange(type, eventObj){\n        let newValue = eventObj.target.value;\n        if (type === 'username') {\n            // this.setState({\n            //     username: newValue\n            // });\n        } else if (type === 'Identity') {\n            this.setState({\n                Identity: newValue\n            });\n        } else if (type === 'Bio') {\n            this.setState({\n                Bio: newValue\n            });\n        }else if (type === 'Website') {\n            this.setState({\n                Website: newValue\n                });\n        } else if (type === 'Position') {\n            this.setState({\n                Position: newValue\n            });\n        }else if (type === 'Institution') {\n            this.setState({\n                Institution: newValue\n                  });\n        }\n    }\n\n    // 点击头像，触发点击上传文件的表单\n    changeImageAction () {\n        this.refs.inputfile.click();\n    }\n\n    // 根据 state.isEdit 的值，显示不同的内容\n    getUserInfoHtml () {\n        let {isEdit, username, Identity, Bio, Position, Institution, Website} = this.state;\n        if (isEdit) {\n            return (\n                <Form className={styles['edit-form']} style={{marginTop:'7px'}}>\n                    <Form.Item className={styles['form-input']}>\n                        <Input\n                        defaultValue={username}\n                        value={username}\n                        onChange={this.userInputChange.bind(this, 'username')}\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Username\"\n                        />\n                    </Form.Item>\n                    <Form.Item className={styles['form-input']}>\n                        <Input\n                        defaultValue={Bio}\n                        value={Bio}\n                        onChange={this.userInputChange.bind(this, 'Bio')}\n                        prefix={<Icon type=\"apartment\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Bio\"\n                        />\n                    </Form.Item>\n                    <Form.Item className={styles['form-input']}>\n                        <Input\n                        defaultValue={Identity}\n                        value={Identity}\n                        onChange={this.userInputChange.bind(this, 'Identity')}\n                        prefix={<Icon type=\"environment\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Identity\"\n                        />\n                    </Form.Item>\n                    <Form.Item className={styles['form-input']}>\n                        <Input\n                        defaultValue={Position}\n                        value={Position}\n                        onChange={this.userInputChange.bind(this, 'Position')}\n                        prefix={<Icon type=\"global\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Position\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item className={styles['form-input']}>\n                        <Input\n                        defaultValue={Institution}\n                        value={Institution}\n                        onChange={this.userInputChange.bind(this, 'Institution')}\n                        prefix={<Icon type=\"global\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Institution\"\n                        />\n                    </Form.Item>\n                    <Form.Item className={styles['form-input']}>\n                        <Input\n                        defaultValue={Website}\n                        value={Website}\n                        onChange={this.userInputChange.bind(this, 'Website')}\n                        prefix={<Icon type=\"global\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Website\"\n                        />\n                    </Form.Item>\n                    <Form.Item style={{textAlign: 'center'}}>\n                        <div className={styles['edit-btn-container']}>\n                            <Button type=\"primary\" className={styles['edit-btn']} onClick={this.cancelInputAction.bind(this)}>Cancel</Button>\n                        </div>\n                        <div className={styles['edit-btn-container']}>\n                            <Button type=\"primary\" className={styles['edit-btn']} onClick={this.saveUserInfoAction.bind(this)}>Save</Button>\n                        </div>\n                    </Form.Item>\n                </Form>\n            )\n        } else {\n            return (\n                <>\n                    <div className={styles.username}>\n                        {username}\n                    </div>\n                    <div className={styles.info}>\n                        {Bio}\n                    </div>\n                    <div className={styles.info}>\n                        {Identity}\n                    </div>\n                    <div className={styles.info}>\n                        {Position}\n                    </div>\n                    <div className={styles.info}>\n                        {Institution}\n                    </div>\n                    <div className={styles.info}>\n                        {Website}\n                    </div>\n                </>\n            )\n        }\n\n    }\n\n    saveUserInfoAction () {\n\n        let {username, Position, Institution,Bio,Identity} = this.state;\n        var userInfoStr = window.localStorage.getItem(\"userinfo\");\n        var userInfo = JSON.parse(userInfoStr);\n        userInfo.profession = Position;\n        userInfo.userName = username;\n        userInfo.institution = Institution;\n        userInfo.bio = Bio;\n        userInfo.occupation = Identity;\n        var tokenStr = userInfo.token;\n        axios.post(\"http://ec2-52-15-224-200.us-east-2.compute.amazonaws.com:8080/api/users/editprofile?userName=\"+username+\"&Identity=\"+Identity+\"&Bio=\"+Bio+\"&Position=\"+Position+\"&Institution=\"+Institution,{},{\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": \"Bearer \"+tokenStr\n            }\n        })\n        .then(function(res) {\n            console.log(res);\n            var userInfoStr = JSON.stringify(userInfo)\n            window.localStorage.setItem(\"userinfo\", userInfoStr);\n            // debugger\n        })\n        .catch(function(err) {\n            console.log(err);\n        });\n    }\n\n    // 页面跳转到首页\n    goHomePage () {\n        Router.push('/profile');\n    }\n\n    // 收藏\n    collectAction (messageObj, eventObj) {\n        let { messageList } = this.state;\n\t\t// 循环遍历 state中的 数组对象\n        let newListData = messageList.map(function(item, idx){\n            if (item.id === messageObj.id) {\n\t\t\t\t// 改变值\n                return {\n                    ...item,\n                    isCollect:  !messageObj.isCollect\n                }\n            } else {\n                return item;\n            }\n        });\n\t\t// 变化之后的 JSON数组，重新赋值\n        this.setState({\n            messageList: newListData\n        })\n    }\n\n    // 点赞\n    complimentAction(messageObj, index, eventObj) {\n        let { messageList } = this.state;\n        messageList[index]['isCompliment'] = !messageList[index]['isCompliment'];\n        // let newListData = JSON.parse(JSON.stringify(messageList));\n        let newListData = messageList;\n        this.setState({\n            messageList: newListData\n        })\n    }\n\n    // 获取用户的评论列表\n    getMessageListHtml () {\n        const that = this;\n        let { messageList } = this.state;\n        // 因为 messageList 是异步加载进来的，所以最开始，是undefined\n        if (!messageList) {\n            messageList = [];\n        }\n        return messageList.map(function(messageObj, index){\n            return (\n                <div className={styles['message-container']} key={messageObj.id}>\n                    <div className={styles.portrait}>\n                        <img src='../static/logo.png' className={styles.image} />\n                    </div>\n                    <div className={styles['info-container']}>\n                        <div className={styles.author}>\n                            {messageObj.title}\n                        </div>\n                        <div className={styles.theme}>\n                            {messageObj.message}\n                        </div>\n                        <div className={styles.time}>\n                            {messageObj.date}\n                            <div className={styles['tool-bar']}>\n                                <div className={styles['bar-btn']}>\n                                    {/* 点赞 */}\n                                    {\n                                        messageObj.isCompliment ?\n                                        <i className=\"mdi mdi-heart\"  onClick={that.complimentAction.bind(that, messageObj, index)}  />\n                                        : <i className=\"mdi mdi-heart-outline\" onClick={that.complimentAction.bind(that, messageObj, index)}/>\n                                    }\n                                </div>\n                                <div className={styles['bar-btn']}>\n                                    <i className=\"mdi mdi-comment-outline\" onClick={that.collectAction.bind(that, messageObj)}/>\n                                </div>\n                                <div className={styles['bar-btn']}>\n                                    {/* 收藏 */}\n                                    {\n                                        messageObj.isCollect ?\n                                        <i className=\"mdi mdi-bookmark\" onClick={that.collectAction.bind(that, messageObj)} style={{color: '#FEC603'}} />\n                                        : <i className=\"mdi mdi-bookmark-outline\" onClick={that.collectAction.bind(that, messageObj)}/>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        })\n    }\n\n    render() {\n        // 得到的是用户的信息 HTML\n        let userInfoHtml = this.getUserInfoHtml();\n        let messageListHtml = this.getMessageListHtml();\n        return (\n          <div className={styles['userinfo-page']}>\n              {/* <UHeader /> */}\n              <div className={styles.header}>\n                  <div className={styles['top-placement']}>\n                      <img alt='logo' className={styles.logo} src={logo} onClick={this.goHomePage.bind(this)}/>\n                  </div>\n                  <div className={styles['list-info']}>\n                      <div className={styles['item-info']}>1 post</div>\n                      <div className={styles['item-info']}>1 Following</div>\n                      <div className={styles['item-info']}>1 Followers</div>\n                      <div className={styles['item-info']}>1 Views</div>\n                      <div style={{'clear': 'both'}}></div>\n                      <img src='../static/logo.png' className={styles.image} onClick={this.changeImageAction.bind(this)}/>\n                      <input type='file' ref='inputfile' style={{display: 'none'}} />\n                  </div>\n              </div>\n              <div className={styles['main-container']}>\n                  <div className={styles['main-left']}>\n                      {userInfoHtml}\n                  </div>\n                  <div className={styles['main-center']}>\n                      {messageListHtml}\n                  </div>\n                  <div className={styles['main-right']}>\n                      <Button type=\"primary\" className={styles['edit-btn']} onClick={this.editAction.bind(this)}>Edit profile</Button>\n                  </div>\n              </div>\n          </div>\n        );\n    }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AA4BA;AAJA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;;;;;;;AAMA;;;;AACA;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AAAA;AACA;AADA;AACA;AAAA;AADA;AACA;AAGA;AACA;AADA;AAGA;AAPA;AAQA;AACA;AACA;;;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AASA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AADA;AAGA;AAEA;AACA;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AASA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AAKA;AAEA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAOA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAQA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;;;;AA9bA;AAAA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}